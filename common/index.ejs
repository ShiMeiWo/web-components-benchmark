<!DOCTYPE html>
<html dir="ltr" lang="en">
    <head>
        <meta charset="utf-8" />
        <title>Web Components Benchmark</title>
        <meta
            name="Description"
            content="Two simple examples built with various Web Components technologies and benchmarked"
        />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0"
        />
        <meta name="theme-color" content="#16161d" />
        <meta name="apple-mobile-web-app-capable" content="yes" />

        <meta http-equiv="x-ua-compatible" content="IE=Edge" />

        <link
            href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
            rel="stylesheet"
            integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO"
            crossorigin="anonymous"
        />
    </head>

    <body>
        <div class="container">
            <div class="py-5 text-center">
                <h1>Web Components Benchmark</h1>
                <br />
                <p class="lead">
                    Two simple examples built with various Web Components
                    technologies and benchmarked
                </p>
                <br />
                <p>
                    Repo :
                    <a
                        href="https://github.com/vogloblinsky/web-components-benchmark"
                        target="_blank"
                        >github.com/vogloblinsky/web-components-benchmark</a
                    >
                </p>
                <br />
                <p>
                    The demos do not use any Polyfill & are build to ES6/ES2015
                    code for benchmarks purpose. <br />
                    Please use Chrome, Safari or Firefox > v63
                </p>
                <p>
                    The benchmark is running on Travis during a CI process,
                    results are constant between two builds.
                </p>
                <p>
                    The benchmark use the great Puppeteer Node.js library for
                    manipulating a Chrome headless instance. Puppeteer has some
                    APIs for generating a RAW trace file which can be opened in
                    Chrome DevTools or
                    <a
                        href="https://chromedevtools.github.io/timeline-viewer/"
                        target="_blank"
                        >timeline viewer</a
                    >.
                </p>
                <p>
                    The data extracted from the RAW JSON is the "top down tree"
                    total time in DevTools Performance tab of Chrome, which is
                    an addition of scripting, rendering & painting time in the
                    graph below.
                </p>
                <p><img src="devtools.png" /></p>
                <p>Last build : <%= buildDateAndTime %></p>
                <br />

                <p>
                    <a href="#todo">Todo List</a> |
                    <a href="#pascal">Pascal triangle</a>
                </p>

                <hr />
            </div>
            <div class="py-5 text-center clear-padding-top">
                <a id="todo"></a>
                <h2 class="text-primary">Todo List</h2>
                <p>
                    This benchmark consist of 4 scenarios : page load, create 50
                    todos, delete 50 todos, editing 50 todos
                </p>
                <br />
                <p>Lower numbers are better</p>
                <br />
                <h4>Libraries or compilers</h4>
                <table class="table table-striped">
                    <thead>
                        <%- include('table_header'); %>
                    </thead>
                    <tbody>
                        <% todo.WClibraries.forEach(function(library){ %> <%-
                        include('table', {library: library}); %> <% }); %>
                    </tbody>
                </table>
                <br />
                <h4>Classic frameworks exporting to Web Components</h4>
                <table class="table table-striped">
                    <thead>
                        <%- include('table_header'); %>
                    </thead>
                    <tbody>
                        <% todo.FW.forEach(function(library){ %> <%-
                        include('table', {library: library}); %> <% }); %>
                    </tbody>
                </table>
            </div>
            <div class="py-5 text-center">
                <a id="pascal"></a>
                <h2 class="text-primary">Pascal triangle</h2>
                <p>This benchmark display a Pascal Triangle</p>
                <br />
                <p>Lower numbers are better</p>
                <br />
                <h4>Libraries or compilers</h4>
                <table class="table table-striped">
                    <thead>
                        <%- include('table_header_pascal'); %>
                    </thead>
                    <tbody>
                        <% pascal.WClibraries.forEach(function(library){ %> <%-
                        include('table_pascal', {library: library}); %> <% });
                        %>
                    </tbody>
                </table>
                <br />
                <h4>Classic frameworks exporting to Web Components</h4>
                <table class="table table-striped">
                    <thead>
                        <%- include('table_header_pascal'); %>
                    </thead>
                    <tbody>
                        <% pascal.FW.forEach(function(library){ %> <%-
                        include('table_pascal', {library: library}); %> <% });
                        %>
                    </tbody>
                </table>
            </div>
        </div>

        <style>
            body {
                background: #f5f5f5;
            }

            .table-light .name {
                color: #333;
                font-size: 1.2rem;
            }

            .progress {
                background-color: #d1d2d3;
            }

            .progress-bar {
                font-weight: bold;
            }

            table {
                width: 100%;
                table-layout: fixed;
                border-top: none;
            }

            .table th {
                border-top: none;
            }

            .clear-padding-top {
                padding-top: 0 !important;
            }

            hr {
                margin: 40px 0 0 0;
            }

            .bg-1 {
                background-color: #f6b93b !important;
            }

            .bg-2 {
                background-color: #e55039 !important;
            }

            .bg-3 {
                background-color: #b71540 !important;
            }

            .bg-4 {
                background-color: #4a69bd !important;
            }

            .bg-5 {
                background-color: #b8e994 !important;
            }

            .bg-6 {
                background-color: #079992 !important;
            }

            .light {
                font-weight: normal;
            }

            .element-infos {
                display: flex;
                flex-direction: column;
            }

            .element-infos__stars {
                display: flex;
                justify-content: center;
                font-weight: normal;
            }

            .element-infos__stars ion-icon[name='star'] {
                color: #ff9800;
                margin-top: 2px;
            }
        </style>
        <script src="https://unpkg.com/ionicons@4.4.6/dist/ionicons.js"></script>
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-131047101-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || [];

            function gtag() {
                dataLayer.push(arguments);
            }
            gtag('js', new Date());

            gtag('config', 'UA-131047101-1');
        </script>
    </body>
</html>
